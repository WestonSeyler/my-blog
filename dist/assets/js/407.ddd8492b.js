(window.webpackJsonp=window.webpackJsonp||[]).push([[407],{845:function(e,s,n){"use strict";n.r(s);var t=n(30),a=Object(t.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("2018-11-06更新：\n如果在chrome浏览器中过期时间 expiration date显示的是1969。\n"),n("a",{attrs:{href:"https://stackoverflow.com/questions/51497459/what-does-a-cookie-with-1969-as-the-expiration-date-mean",target:"_blank",rel:"noopener noreferrer"}},[e._v("答案"),n("OutboundLink")],1),e._v('\n说明cookie是临时的，只保持在这个会话周期，当浏览器关闭时cookie会被清除。\nUnix time was started at the beginning of 1970, that means that -1 is in 1969. And that is a commonly used value for "unknown" if the expected value is usually positive. And for cookies MaxAge with a negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits.')]),e._v(" "),n("p",[e._v("2018-08-27更新：\n使用cookie前强烈建议先看下MDN的这篇"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("基础文章"),n("OutboundLink")],1),e._v("\n创建cookie可以配置的选项 Expires，Secure，HttpOnly，Domain，Path，SameSite。\n为避免跨域脚本 (XSS) 攻击，通过JavaScript的 Document.cookie API无法访问带有 HttpOnly 标记的Cookie，它们只应该发送给服务端。")]),e._v(" "),n("p",[e._v("最近在开发一个前后台分离的项目。\n前台是 localhost:8080，基于vue，请求用的axios库，后台是地址 localhost:8111，使用的是NodeJS。\n也就是前台发起的请求是跨域的。\n现在流程是这样的： 前台向后台请求接口，后台会看到set-cookie，可是我发现前端JS 怎么也拿不到 cookie（后来发现是cookie被设置了HttpOnly）。axios的response里没有。但是在chrome里可以看到设置的cookie。\n查了文档，当需要跨域请求，前台需要设置 withCredentials 为 true。 这样每次请求会自动带上 cookie，但是后台也需要设置 Access-Control-Allow-Credentials: true， 就不能用*来设置Origin了，即  "),n("code",[e._v("Access-Control-Allow-Origin:*")]),e._v(" , 而应该相应的改成"),n("code",[e._v("Access-Control-Allow-Origin: localhost:8080")]),e._v(",\n这样就比较尴尬了，到时候前台是对大众开放，需要允许所有来源，难道没有别的办法了？相信标准这么做也是为了安全。\n查了也有解决办法。都还没有尝试。\n比如")]),e._v(" "),n("ol",[n("li",[e._v("可以在nginx中设置，对于过来的请求，让 nginx 自动加上请求头。下面的方法没试，不是嫌麻烦，是部署的工作不是自己的人来做。")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if ($http_origin ~* ( https?://.*\\.example\\.com(:[0-9]+)?$)) {\n    add_header Access-Control-Allow-Origin: $http_origin;\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[e._v("对于后端，比如express。每个请求都走一遍中间件, 取出 headers 里的域名, 写到 CORS 头部去：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('app = express()\n\napp.all(\'/*\', (req, res, next) => {\n  if (req.headers.origin) {\n    res.header("Access-Control-Allow-Origin", req.headers.origin)\n    res.header("Access-Control-Allow-Credentials", true)\n    res.header(\'Access-Control-Allow-Methods\', \'PUT, GET, POST, DELETE, OPTIONS\')\n    # 下面一行意义不明确...\n    res.header("Access-Control-Allow-Headers", "X-Requested-With, AUTHORIZATION")\n  }\n  next(); // pass control to the next handler\n});\nnext()\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("p",[e._v("其实使用cookie做前后端分离真的没有 token 或 jwt 好用。机密的信息不要放到cookie中比较好。")]),e._v(" "),n("p",[e._v("====\n更新\n使用下面的方法在本地可行")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('if (process.env.NODE_ENV == \'local\') {\n    app.use(function(req, res, next) {\n        res.header("Access-Control-Allow-Credentials", true);\n        res.header("Access-Control-Allow-Origin", req.headers.origin);\n        res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");\n        next();\n    });\n}else {\n    app.use(cors());\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);