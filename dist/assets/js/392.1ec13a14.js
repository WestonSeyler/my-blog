(window.webpackJsonp=window.webpackJsonp||[]).push([[392],{830:function(s,t,e){"use strict";e.r(t);var n=e(30),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("通常情况下我们都是将项目托管到Github，Coding等服务商。如果你有一台自己的Linux云主机，在上面搭建Git服务器比想象中要简单的多。这篇文章讲解如何搭建Git服务器及使用git的hook机制(使用post-receive这个hook，在git服务器受到push请求，并且接受完代码提交时触发)")]),s._v(" "),e("p",[s._v("大致要执行下面的命令")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 创建一个名为git的用户，专门访问仓库，这里会问一系列问题，包括设置用户密码，请牢记\nsudo adduser git\n# 配置SSH，无密码访问服务器，这里不是本文重点，关于SSH配置请自行搜索，要创建 home/git/.ssh 目录，并设置权限\nsudo chmod 700 /home/git/.ssh  \nchmod 600 authorized_keys\n# 创建项目目录，这里没有放到用户目录下\nmkdir -p /usr/git_repo/gittest.git && cd ..  \n# 建立一个裸仓库并设置该仓库目录的组权限为可写。\n# 裸仓库就是一个只包含.git子目录的内容，不包含其他资料。\ngit init --bare --shared\n\n# 好，服务端的仓库已经创建，下面是本地操作\n\n# 开发人员小马先在本地创建一个git项目，将刚才创建的仓库设置为项目的远程仓库并推送分支。\ngit init\ntouch readme && vi readme\ngit add .\ngit commit -m 'add readme'\ngit remote add origin git@cloud:/usr/git_repo/gittest.git\ngit push origin master\n\n# 小张作为另外一个开发人员，可以直接clone项目，并推送自己的改动\n# 本地尝试访问并拉仓库。cloud是我配置ssh主机名称，也可以是IP地址或域名\n# 如果不成功检查SSH的配置\ngit clone git@cloud:/usr/git_repo/gittest.git\ncd gittest\nvi readme\ngit commit -am 'fix the readme file'\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[s._v("是不是和Github的 "),e("code",[s._v("git clone git@github.com:mafeifan/smzdm.git")]),s._v(" 很类似？但是Github还支持HTTP协议，比如 "),e("code",[s._v("https://github.com/mafeifan/smzdm.git")]),s._v(" 想达到同样的目的，需要在服务器上针对apache或nginx配置 "),e("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-Smart-HTTP",target:"_blank",rel:"noopener noreferrer"}},[s._v("git-http-backend"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"使用服务器的hook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用服务器的hook"}},[s._v("#")]),s._v(" 使用服务器的hook")]),s._v(" "),e("p",[s._v("每当本地push代码，还得在服务器上git pull。这样太麻烦了。git支持hook机制，类似事件通知，比如git服务器收到push请求，并且接受完代码提交时触发。需要在hooks目录下创建post-receive文件\n服务器操作")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cd /usr/git_repo/gittest.git/hooks\nsudo cp post-update.sample  post-receive\n# 编辑post-receive内容为\necho $(date) >> hook.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("这样push代码到服务器，就会多出一个记录时间的hook.log\n你可以优化内容，比如执行代码检查，git pull代码到/var/www，npm install，等操作。")]),s._v(" "),e("h2",{attrs:{id:"使用托管网站的web-hook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用托管网站的web-hook"}},[s._v("#")]),s._v(" 使用托管网站的web-hook")]),s._v(" "),e("p",[s._v("以bitbucket为例，我在上面创建一个nodejs项目叫git-deploy-demo，暴露一个接口叫deploy，必须是post方法。项目跑在我自己的主机叫cloud。每次push代码，我让他调用这个deploy接口\n"),e("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-6a41eb3e26a43784.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}}),s._v("\n关于deploy接口，接收调用后执行update.sh脚本")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const exec = require('child_process').exec;\napp.post('/deploy', (req, res) => {\n  const commands = 'sh ./update.sh';\n  exec(commands, (err, out, code) => {\n  \tif (res.statusCode === 200) {\n  \t\tres.send('deploy done');\n  \t}else {\n  \t\tres.send(out)\n  \t}\n  })\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("update.sh内容如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#!/bin/bash\ngit pull\nnpm install\nsudo pm2 restart git-deploy-demo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考：")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("服务器上的-Git-协议"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.codecasts.com/series/something-that-a-little-helpful/episodes/3",target:"_blank",rel:"noopener noreferrer"}},[s._v("Coding Webhook 自动部署Git项目"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://www.yinqisen.cn/blog-675.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("通过git自动部署WEB服务上的PHP代码，提交即生效"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("需FQ "),e("a",{attrs:{href:"https://gist.github.com/thomasfr/9691385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git push deployment in 7 easy steps.md"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);