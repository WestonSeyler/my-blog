(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{577:function(s,n,t){"use strict";t.r(n);var a=t(30),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("在"),t("a",{attrs:{href:"https://www.jianshu.com/p/eae6b12c1cd5",target:"_blank",rel:"noopener noreferrer"}},[s._v("上节"),t("OutboundLink")],1),s._v("中我们创建了 mysql 集群。\n实际工作中，我们不希望让某一数据库节点处理所有的请求，这样的话单个负载高，性能差。")]),s._v(" "),t("blockquote",[t("p",[t("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-6b9dcf8b92b5f9b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])]),s._v(" "),t("p",[s._v("在这里我们使用haproxy作为负载均衡的中间件，类似的还有LVS，但是好像不支持虚拟机，在docker中用不了。")]),s._v(" "),t("blockquote",[t("p",[t("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-84aec2631cb05277.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])]),s._v(" "),t("h3",{attrs:{id:"实现流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现流程"}},[s._v("#")]),s._v(" 实现流程：")]),s._v(" "),t("ol",[t("li",[s._v("下载镜像 "),t("code",[s._v("docker pull haproxy")])]),s._v(" "),t("li",[s._v("宿主机创建 haproxy 的配置文件，比如路径是 D:\\Docker\\haproxy\\haproxy.cfg")]),s._v(" "),t("li",[s._v("最重要的就是配置文件了。这里内容如下：")])]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[s._v("global\n        daemon\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nbproc 1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pidfile /var/run/haproxy.pid")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工作目录")]),s._v("\n        chroot /usr/local/etc/haproxy\n\ndefaults\n        log 127.0.0.1 local0 err #[err warning info debug]\n        mode http                #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK\n        retries 2                #两次连接失败就认为是服务器不可用，也可以通过后面设置\n        option redispatch        #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器\n        option abortonclose      #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接\n        option dontlognull       #日志中不记录负载均衡的心跳检测记录\n        maxconn 4096             #默认的最大连接数\n        timeout connect 5000ms   #连接超时\n        timeout client 30000ms   #客户端超时\n        timeout server 30000ms   #服务器超时\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#timeout check 2000      #=心跳检测超时")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######## 监控界面配置 #################")]),s._v("\nlisten admin_status\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监控界面访问信息")]),s._v("\n        bind 0.0.0.0:8888\n        mode http\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# URI相对地址")]),s._v("\n        stats uri /dbs\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计报告格式")]),s._v("\n        stats realm Global\\ statistics\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录账户信息")]),s._v("\n        stats auth admin:123456\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########frontend配置##############")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######## mysql负载均衡配置 ###############")]),s._v("\nlisten proxy-mysql\n        bind 0.0.0.0:3306\n        mode tcp\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 负载均衡算法")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# static-rr 权重, leastconn 最少连接, source 请求IP, 轮询 roundrobin")]),s._v("\n        balance roundrobin\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志格式")]),s._v("\n        option tcplog\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 mysql 创建一个没有权限的haproxy用户，密码为空。 haproxy用户")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create user 'haproxy'@'%' identified by ''; FLUSH PRIVILEGES;")]),s._v("\n        option mysql-check user haproxy\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里是容器中的IP地址，由于配置的是轮询roundrobin，weight 权重其实没有生效")]),s._v("\n        server MYSQL_1 172.18.0.2:3306 check weight 1 maxconn 2000\n        server MYSQL_2 172.18.0.3:3306 check weight 1 maxconn 2000\n        server MYSQL_3 172.18.0.4:3306 check weight 1 maxconn 2000\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用keepalive检测死链")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# option tcpka")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#########################################")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("启动 haproxy 的容器，镜像名称为 h1，网络名称使用上节中创建的 pxc-network，就是和 mysql 集群处于同一网络。\n"),t("code",[s._v("docker run -it -d -p 4001:8888 -p 4002:3306 -v D:/Docker/haproxy:/usr/local/etc/haproxy --name h1 --net=pxc-network")])]),s._v(" "),t("li",[s._v("进去容器，并让 haproxy 加载配置\n"),t("code",[s._v("docker exec -it h1 bash")]),s._v(" "),t("code",[s._v("haproxy -f /usr/local/etc/haproxy/")])]),s._v(" "),t("li",[s._v("宿主机打开  "),t("code",[s._v("http://localhost:4001/dbs")]),s._v(" 这是haproxy 提供的图形界面")])]),s._v(" "),t("blockquote",[t("p",[t("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-3bcd4c134d733d46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])]),s._v(" "),t("p",[s._v("可以看到每个mysql节点运行状态是绿色，说明正常。\n7. 测试，停掉一个数据库节点 "),t("code",[s._v("docker stop pxc_node1")]),s._v(" ，发现有一个变红了。")]),s._v(" "),t("blockquote",[t("p",[t("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-ef6c1883613f0363.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])]),s._v(" "),t("ol",{attrs:{start:"8"}},[t("li",[s._v("项目中可以使用配置的 4002 来连接数据库，这样请求会被分发到各个子节点。")])]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结：")]),s._v(" "),t("ol",[t("li",[s._v("数据库的负载均衡配置还是比较简单的，关键是负载均衡算法，如果每个数据库节点配置都一样，可以使用轮询算法，如果不一样，可以使用权重算法，让配置高的多接收请求。")]),s._v(" "),t("li",[s._v("官方的"),t("a",{attrs:{href:"https://www.percona.com/doc/percona-xtradb-cluster/LATEST/howtos/haproxy.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("教程"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=e.exports}}]);