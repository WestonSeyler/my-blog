(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{661:function(s,t,n){"use strict";n.r(t);var a=n(30),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("strong",[s._v("Generic Webhook Trigger")]),s._v(" 是一款Jenkins插件，下文简称GWT，安装后会暴露出来一个公共API，\nGWT插件接收到 JSON 或 XML 的 HTTP POST 请求后，根据我们配置的规则决定触发哪个Jenkins项目。")]),s._v(" "),n("p",[s._v('插件安装后在Job配置页面会多出一个"Generic WebHook Trigger"选项\n勾选后有很多参数配置，详细介绍GWT各参数的含义我们下面会讲到')]),s._v(" "),n("p",[n("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-9d63ff9d0be3ca2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),s._v(" "),n("p",[s._v("插件安装后在pipeline也可以使用GenericTrigger指令完成相同的配置")]),s._v(" "),n("p",[s._v("现在，我们创建一个普通的pipeline项目。代码如下:")]),s._v(" "),n("div",{staticClass:"language-groovy line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang comment"}},[s._v("#!groovy")]),s._v("\n\npipeline "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    agent "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        node "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            label "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    triggers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("GenericTrigger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            genericVariables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ref'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$. ref'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            token"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'secret'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            causeString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' Triggered on $ref'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            printContributedVariables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            printPostContent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    stages "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("stage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GWT env'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                sh "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"echo '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$")]),s._v("ref")]),s._v('"')]),s._v("\n                sh "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"printenv"')]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("注意：在创建完成后，需要手动执行一次， 这样pipeline的触发条件オ会生效。\n然后我们用postman 发起一次 HTTP POST 请求。\n"),n("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-8795c75afd706922.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),s._v(" "),n("p",[s._v("或者直接用curl命令 "),n("code",[s._v("curl -vs http://140.xxx.xxx.xxx/generic-webhook-trigger/invoke\\?token\\=first-pipeline\\&foo\\=bar")])]),s._v(" "),n("p",[s._v("接着，我们就看到 pipeline 被触发！")]),s._v(" "),n("p",[s._v("GenericTrigger 触发条件由GWT插件提供。此触发条件可以说是GWT的所有内容。\nGenericTrigger 触发条件分为5部分，这样更易于理解各参数的作用。")]),s._v(" "),n("ul",[n("li",[s._v("从 HTTP POST 请求中提取参数值。")]),s._v(" "),n("li",[s._v("token, GWT 插件用于标识Jenkins项目的唯一性。")]),s._v(" "),n("li",[s._v("根据清求参数值判断是否触发Jenkins项目的抗行。")]),s._v(" "),n("li",[s._v("日志打印控制。")]),s._v(" "),n("li",[s._v("WebHook 响应控制。\n一个 HTTP POST 请求可以从三个维度提取参数，即 POST Body、URL参数和header。\nGWT 插件提供了三个参数分别从这三个维度的数据进行提取。")])]),s._v(" "),n("ol",[n("li",[n("strong",[s._v("genericVariables")]),s._v("： 提取POST body 中的参数")])]),s._v(" "),n("div",{staticClass:"language-groovy line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[s._v("genericVariables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n       key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'before'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n       value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.before'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n       expressionType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JSONPath'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n       regularFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n       defaultValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ref'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.ref'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("value： JSONPath 或 XPath 表达式，取决于 expressType 参数值，用于从 POST body 中提取值。")]),s._v(" "),n("li",[s._v("key： 从 POST Body 中提取出的值的新变量名，可用于pipeline其他步骤。")]),s._v(" "),n("li",[s._v("expressType： 可选， value的表达式类型，默认为JSONPath，当请求为XML内容时，必须指定 XPath 值。")]),s._v(" "),n("li",[s._v("defaultValue：可选，当提取不到值，且defaultValue不为空时，则使用defaultValue作为返回值。")]),s._v(" "),n("li",[s._v("regexpFilter：可选，过滤表达式，对提取出来的值进行过滤。regexpFilter做的事情其实就是"),n("code",[s._v('string.replaceAll(regexpFilter，"")')]),s._v("；。string是从HTTP请求中提取出来的值。")])]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("strong",[s._v("genericRequestVariables")]),s._v("：从URL参数中提取值。")])]),s._v(" "),n("div",{staticClass:"language-groovy line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[s._v("genericRequestVariables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n       key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'requestWithNumber'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n       regexpFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[^0-9]'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'requestWithString'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" regexpFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("• key：提取出的值的新变量名，可用于pipeline其他步骤。\n• regexpFilter：对提取出的值进行过滤。")]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("strong",[s._v("genericHeaderVariables")]),s._v("：从HTTP header 中提取值。用法和genericRequestVariables一样。")])]),s._v(" "),n("h4",{attrs:{id:"token-参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#token-参数"}},[s._v("#")]),s._v(" token 参数")]),s._v(" "),n("p",[s._v("标识唯一性，值可以使用项目+时间\n当Jenkins接收到 GWT 接口的请求时，会将请求代理给GWT插件处理。GWT插件内部会从Jenkins实例对象中取出所有的参数化Jenkins项目，包括pipeline, 然后进\n行遍历。如果在参数化项目中GenericTrigger配置的token的值与Webhook请求时的token的值\n致，则触发此参数化项目。\n如果多个项目的此参数值一样，都会被触发。")]),s._v(" "),n("p",[s._v("实际上，GWT并不只是根据 token 值来判断是否触发，还可以根据我们提取出的值进行判断。示例如下:")]),s._v(" "),n("ul",[n("li",[s._v("regexpFilterText：需要进行匹配的key。例子中，我们使用从POST body中提取出的refValue变量值。")]),s._v(" "),n("li",[s._v("regexpFilterExpression：正则表达式。\n如果 regexpFilterText 参数的值符合 regexpFilterExpression 参数的正则表达式，则触发执行。")])]),s._v(" "),n("h4",{attrs:{id:"打印内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打印内容"}},[s._v("#")]),s._v(" 打印内容")]),s._v(" "),n("p",[s._v("GWT 插件提供了三个供日调试打印日志的参数")]),s._v(" "),n("ul",[n("li",[s._v("Silent response 当为true，只返回http 200 状态码，不返回触发结果")]),s._v(" "),n("li",[s._v("Print post content 将 webhook 请求的内容打印到日志上")]),s._v(" "),n("li",[s._v("Print contributed variables 将 提取后的变量打印到日志上")])]),s._v(" "),n("h4",{attrs:{id:"测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),n("p",[s._v("修改请求，header头添加信息，地址添加参数，发现 GWT 返回的结果中已经成功识别了。\n至于多了0的参数，原因未详。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://hexo-blog.pek3b.qingstor.com/upload_images/71414-d6299a967eb18bad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);