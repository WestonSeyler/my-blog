(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{670:function(e,t,p){"use strict";p.r(t);var r=p(30),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,p=e._self._c||t;return p("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[p("p",[e._v("在 k8s 上进行部署前，首先需要了解一个基本概念 Deployment")]),e._v(" "),p("p",[e._v("Deployment 译名为 部署。在k8s中，通过发布 Deployment，可以创建应用程序 (docker image) 的实例 (docker container)，这个实例会被包含在称为 Pod 的概念中，Pod 是 k8s 中最小可管理单元。")]),e._v(" "),p("p",[e._v("在 k8s 集群中发布 Deployment 后，Deployment 将指示 k8s 如何创建和更新应用程序的实例，master 节点将应用程序实例调度到集群中的具体的节点上。")]),e._v(" "),p("p",[e._v("创建应用程序实例后，Kubernetes Deployment Controller 会持续监控这些实例。如果运行实例的 worker 节点关机或被删除，则 Kubernetes Deployment Controller 将在群集中资源最优的另一个 worker 节点上重新创建一个新的实例。这提供了一种自我修复机制来解决机器故障或维护问题。")]),e._v(" "),p("p",[e._v("本教程教你跑一个Web NodeJS项目在google cloud k8s集群上面。")]),e._v(" "),p("p",[e._v("GKE 是 Google Kubernetes Engine (GKE) 集群")]),e._v(" "),p("h2",{attrs:{id:"前提"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#前提"}},[e._v("#")]),e._v(" 前提")]),e._v(" "),p("ol",[p("li",[e._v("已经在GKE上面创建好了k8s集群")])]),e._v(" "),p("p",[p("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e0ff42219c7c490f9c379636563c4ddb~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),e._v(" "),p("ol",{attrs:{start:"2"}},[p("li",[e._v("本地安装好了gcloud cli，并且可以管理集群")])]),e._v(" "),p("p",[p("code",[e._v("kubecl get nodes")]),e._v(" 查看所有节点\n"),p("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd722dfb68984dfbb6515a2de258ebc0~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),e._v(" "),p("ol",{attrs:{start:"3"}},[p("li",[e._v("制作好的镜像")])]),e._v(" "),p("p",[e._v("源码在"),p("a",{attrs:{href:"https://github.com/mafeifan/docker-express-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),p("OutboundLink")],1),e._v("上面非常简单，镜像也放到了"),p("a",{attrs:{href:"https://hub.docker.com/repository/docker/finleyma/express",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker hub"),p("OutboundLink")],1)]),e._v(" "),p("ol",{attrs:{start:"4"}},[p("li",[e._v("本地运行"),p("code",[e._v("docker run -p 3000:3000 -d finleyma/express")]),e._v(" 可以成功")])]),e._v(" "),p("p",[e._v("浏览器打开 http://localhost:3000, 可以看到内容，说明我们的镜像运行成功，可以分发部署了")]),e._v(" "),p("h2",{attrs:{id:"部署应用到gke"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#部署应用到gke"}},[e._v("#")]),e._v(" 部署应用到GKE")]),e._v(" "),p("p",[e._v("创建k8s的deployment\n"),p("code",[e._v("kubectl create deployment express-demo-deployment --image=finleyma/express")])]),e._v(" "),p("p",[e._v("设置基准数量为3，因为我们有3个节点机器，所以每个节点跑一个\n"),p("code",[e._v("kubectl scale deployment express-demo-deployment --replicas=3")])]),e._v(" "),p("p",[e._v("(可选)创建一个水平自动扩展调节器, 根据 CPU 负载将 Pod 数量从 3 个扩缩为 1 到 5 个之间\n"),p("code",[e._v("kubectl autoscale deployment express-demo-deployment --cpu-percent=80 --min=1 --max=5")])]),e._v(" "),p("p",[e._v("查看已创建的Pod\n"),p("code",[e._v("kubectl get pods")])]),e._v(" "),p("p",[p("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7eb6211b4c504e9984232c31eaef98a1~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),e._v(" "),p("p",[e._v("程序跑起来了，google cloud 也可以看到")]),e._v(" "),p("p",[p("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/609f64e03492449da35b531e24ec811c~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),e._v(" "),p("p",[e._v("虽然 Pod 确实具有单独分配的 IP 地址，但这些 IP 地址只能从集群内部访问。此外，GKE Pod 设计是临时的，可根据扩缩需求启动或关闭。当 Pod 因错误而崩溃时，GKE 会自动重新部署该 Pod，并且每次都会为 Pod 分配新的 IP 地址。")]),e._v(" "),p("p",[e._v("我们需要将集群外部公开 Kubernetes 服务，创建 LoadBalancer 类型的服务。此类型的服务会为可通过互联网访问的一组 Pod 生成外部负载平衡器 IP 地址。")]),e._v(" "),p("p",[p("code",[e._v("kubectl expose deployment express-demo-deployment --name=express-demo-deployment --type=LoadBalancer --port 80 --target-port 3000")])]),e._v(" "),p("div",{staticClass:"language- line-numbers-mode"},[p("pre",{pre:!0,attrs:{class:"language-text"}},[p("code",[e._v("--port 标志指定在负载平衡器上配置的端口号\n--target-port 标志指定 hello-app 容器正在侦听的端口号\n")])]),e._v(" "),p("div",{staticClass:"line-numbers-wrapper"},[p("span",{staticClass:"line-number"},[e._v("1")]),p("br"),p("span",{staticClass:"line-number"},[e._v("2")]),p("br")])]),p("p",[e._v("查看服务，会看到 EXTERNAL-IP 列会自动分配一个IP，访问IP，和本地效果一样")]),e._v(" "),p("p",[p("code",[e._v("kubectl get service")]),e._v(" 或  "),p("code",[e._v("kubectl get svc")])]),e._v(" "),p("p",[p("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3e71b923858458da55440347b870a5a~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),e._v(" "),p("p",[e._v("至此部署完成，下篇介绍如何更新镜像")])])}),[],!1,null,null,null);t.default=o.exports}}]);